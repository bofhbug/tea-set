#!/bin/bash

# =========================================================================

# http://stackoverflow.com/q/8800578/100073
# https://retracile.net/blog/2013/06/01/22.00
# http://www.colordiff.org/
diff() {
	[ $# -gt 0 ] || {
		cat - <<HELP
Usage: $FUNCNAME [OPTION]... FILES

Wrapper for diff to colorize output of diff for better readability.
Try "diff --help" for more information.

OPTIONS

Diff options

All options will be passed to "diff".

Coloring options

--color[=WHEN], --colour[=WHEN]

Controls the colorizing method. WHEN is "always" (the default value if not 
specified explicitly), "never" or "auto". To make affect globally, set one 
of these values to CDIFF_COLOR environment variable.

ENVIRONMENT VARIABLES

The following environment variables are used to customize colors of the 
separate parts of the diff output. Values of each variables are ANSI 
escape codes. Names and resposibility of each variable correspond to the 
the configuration parameters "color.diff.<slot>" in "git config":

CDIFF_META
Metainformation (names of compared files)

CDIFF_FRAG
Hunk header (line numbers of changed lines)

CDIFF_OLD 
Removed lines

CDIFF_NEW
Added lines

CDIFF_MOD
Modified lines

CDIFF_COLOR
Colorizing method does effect on all runs; assumes the same values as for 
the "--color" option. The default value is "auto" and can be superseded by 
the "--color" option.
HELP
		return
	}

	# Colors
	local diff_c_white='\x1b[37;1m'
	local diff_c_red='\x1b[31m'
	local diff_c_green='\x1b[32m'
	local diff_c_blue='\x1b[34m'
	local diff_c_cyan='\x1b[36m'
	local diff_c_reset='\x1b[0m'

	# Blocks
	local diff_b_meta="${CDIFF_META:-$diff_c_white}"
	local diff_b_frag="${CDIFF_FRAG:-$diff_c_cyan}"
	local diff_b_old="${CDIFF_OLD:-$diff_c_red}"
	local diff_b_new="${CDIFF_NEW:-$diff_c_green}"
	local diff_b_mod="${CDIFF_MOD:-$diff_c_blue}"

	# Schemes
	local diff_s_normal="
		# diff ...
		# File headers
		/^[A-Za-z]/ s/^/$diff_b_meta/;

		# Difference headers
		/^[0-9]/ s/^/$diff_b_frag/;

		# Changed lines
		/^< / s/^/$diff_b_old/;
		/^> / s/^/$diff_b_new/;
	"
	local diff_s_context="
		# diff -c ...
		# File headers
		/^[A-Za-z0-9]/ s/^/$diff_b_meta/;
		/^\**$/ s/^/$diff_b_meta/;

		# File or difference headers 
		/^\*\*\* / {
			/\*\*\*\*$/! s/^/$diff_b_meta/;
			/\*\*\*\*$/  s/^/$diff_b_frag/;
		};
		/^--- / {
			/----$/! s/^/$diff_b_meta/;
			/----$/  s/^/$diff_b_frag/;
		};

		# Changed lines
		/^! / s/^/$diff_b_mod/;
		/^- / s/^/$diff_b_old/;
		/^+ / s/^/$diff_b_new/;
	"
	local diff_s_unified="
		# diff -u ...
		# File headers
		/^[A-Za-z]/ s/^/$diff_b_meta/;
		/^--- / s/^/$diff_b_meta/;
		/^+++ / s/^/$diff_b_meta/;

		# Difference headers
		/^@@ [^@]* [^@]* @@/ s/^/$diff_b_frag/;

		# Changed lines
		/^-/ s/^/$diff_b_old/;
		/^+/ s/^/$diff_b_new/;
	"
	local diff_s_ed="
		# diff -e ...
		# File headers
		/^diff \(-e\|--ed\) / s/^/$diff_b_meta/;
		/^Common subdirectories: / s/^/$diff_b_meta/;
		/^Only in / s/^/$diff_b_meta/;
		/^Files .* differ\$/ s/^/$diff_b_meta/;

		# Difference headers
		/^\([0-9][0-9]*,\)\?[0-9][0-9]*[acd]\$/ {
			/a\$/ s/^/$diff_b_new/;
			/c\$/ s/^/$diff_b_mod/;
			/d\$/ s/^/$diff_b_old/;
		}
	"
	local diff_s_rcs="
		# diff -n ...
		# File headers
		/^diff \(-n\|--rcs\) / s/^/$diff_b_meta/;
		/^Common subdirectories: / s/^/$diff_b_meta/;
		/^Only in / s/^/$diff_b_meta/;
		/^Files .* differ\$/ s/^/$diff_b_meta/;

		# Difference headers
		/^[ad][0-9][0-9]* [0-9][0-9]*\$/ {
			/^d/ s/^/$diff_b_old/;
			/^a/ s/^/$diff_b_new/;
		}
	"
	local diff_s_sidebyside="
		# diff -y ...
		# File headers
		/^diff \(-y\|--side-by-side\) / s/^/$diff_b_meta/;
		/^Common subdirectories: / s/^/$diff_b_meta/;
		/^Only in / s/^/$diff_b_meta/;
		/^Files .* differ\$/ s/^/$diff_b_meta/;

		# Changed lines
		/^.* <\$/ s/^/$diff_b_old/;
		/^.*[\t ]*|\t.*$/ s/^/$diff_b_mod/;
		/^[\t ]*>$/ s/^/$diff_b_new/;
		/^[\t ]*>\t.*/ s/^/$diff_b_new/;
	"

	local diff_scheme="$diff_s_normal"

	# Assume "auto" if not specified
	local CDIFF_COLOR="${CDIFF_COLOR:-auto}"

	# Validate environment variable
	case "$CDIFF_COLOR" in
	always | never | auto )
		# Do nothing: it is valid value
		;;
	* )
		echo "Invalid value '$CDIFF_COLOR' in CDIFF_COLOR" >&2
		return 2
		;;
	esac

	local -a args

	while [ $# -gt 0 ]
	do
		case "$1" in
		--help | -v | --version )
			diff_scheme=""
			break
			;;
		-- )
			break
			;;
		--color | --colour )
			CDIFF_COLOR=always
			;;
		--color=* | --colour=* )
			CDIFF_COLOR="${1#*=}"
			;;
		* )
			case "$1" in
			-c | -C* | --context | --context=* )
				diff_scheme="$diff_s_context"
				;;
			-p | --show-c-function )
				diff_scheme="$diff_s_context"
				;;
			-u | -U* |--unified | --unified=* )
				diff_scheme="$diff_s_unified"
				;;
			--normal )
				diff_scheme="$diff_s_normal"
				;;
			-e | --ed )
				diff_scheme="$diff_s_ed"
				;;
			-n | --rcs )
				diff_scheme="$diff_s_rcs"
				;;
			-y | --side-by-side )
				diff_scheme="$diff_s_sidebyside"
				;;
			esac
			args+=( "$1" )
			;;
		esac
		shift
	done

	case "$CDIFF_COLOR" in
	always )
		# Do nothing over defined by options
		;;
	never )
		diff_scheme=""
		;;
	auto )
		test -t 1 || diff_scheme=""
		;;
	* )
		echo "Invalid argument '$CDIFF_COLOR' for --color" >&2
		return 2
		;;
	esac

	args+=( "$@" )

	[ -z "$diff_scheme" ] && {
		env diff "${args[@]}"
		return $?
	}

	env diff "${args[@]}" | sed "$diff_scheme; s/\$/$diff_c_reset/"
}

# =========================================================================

# EOF
